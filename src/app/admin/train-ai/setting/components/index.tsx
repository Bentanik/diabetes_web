'use client'
import { useState } from 'react'
import Header from '@/app/admin/train-ai/setting/components/header'
import { FolderIcon, MessageCircleIcon } from 'lucide-react'
import KnowledgeBaseSetting from '@/app/admin/train-ai/setting/components/knowledge_base_setting'

export default function SettingTrainAIComponent() {
    const [activeTab, setActiveTab] = useState('knowledgebases')

    const tabs = [
        { id: 'knowledgebases', label: 'Th∆∞ m·ª•c', icon: <FolderIcon /> },
        { id: 'prompts', label: 'Prompt Settings', icon: <MessageCircleIcon /> }
    ]

    const renderTabContent = () => {
        switch (activeTab) {
            case 'knowledgebases':
                return <KnowledgeBaseSetting />
            case 'prompts':
                return <PromptsTab />
            default:
                return <KnowledgeBaseSetting />
        }
    }

    return (
        <div>
            <header>
                <Header />
            </header>

            <div className="flex flex-col gap-4">
                {/* Tabs Navigation */}
                <div className="border-b border-gray-200">
                    <nav className="-mb-px flex space-x-8">
                        {tabs.map((tab) => (
                            <button
                                key={tab.id}
                                onClick={() => setActiveTab(tab.id)}
                                className={`py-2 px-1 border-b-2 font-medium flex items-center gap-2 ${activeTab === tab.id
                                    ? 'border-blue-500 text-blue-600'
                                    : 'border-transparent text-gray-500 hover:text-gray-700'
                                    }`}
                            >
                                <span>{tab.icon}</span>
                                {tab.label}
                            </button>
                        ))}
                    </nav>
                </div>

                {/* Dynamic Content */}
                {renderTabContent()}
            </div>
        </div>
    )
}

// Prompts Tab (kh√¥ng thay ƒë·ªïi)
function PromptsTab() {
    const [selectedTemplate, setSelectedTemplate] = useState('medical-consultation')

    const promptTemplates = [
        { id: 'medical-consultation', name: 'T∆∞ v·∫•n Y t·∫ø', description: 'Template cho t∆∞ v·∫•n y t·∫ø t·ªïng qu√°t' },
        { id: 'diagnosis-support', name: 'H·ªó tr·ª£ Ch·∫©n ƒëo√°n', description: 'Template h·ªó tr·ª£ ch·∫©n ƒëo√°n b·ªánh' },
        { id: 'treatment-advice', name: 'T∆∞ v·∫•n ƒêi·ªÅu tr·ªã', description: 'Template ƒë∆∞a ra l·ªùi khuy√™n ƒëi·ªÅu tr·ªã' },
        { id: 'drug-information', name: 'Th√¥ng tin Thu·ªëc', description: 'Template cung c·∫•p th√¥ng tin v·ªÅ thu·ªëc' }
    ]

    const [systemPrompt, setSystemPrompt] = useState(`B·∫°n l√† m·ªôt tr·ª£ l√Ω AI chuy√™n v·ªÅ y t·∫ø, ƒë∆∞·ª£c hu·∫•n luy·ªán ƒë·ªÉ h·ªó tr·ª£ t∆∞ v·∫•n s·ª©c kh·ªèe.

Nhi·ªám v·ª• c·ªßa b·∫°n:
- Cung c·∫•p th√¥ng tin y t·∫ø ch√≠nh x√°c d·ª±a tr√™n ki·∫øn th·ª©c ƒë∆∞·ª£c cung c·∫•p
- Lu√¥n khuy·∫øn kh√≠ch b·ªánh nh√¢n ƒë·∫øn g·∫∑p b√°c sƒ© khi c·∫ßn thi·∫øt
- Kh√¥ng ƒë∆∞a ra ch·∫©n ƒëo√°n ch·∫Øc ch·∫Øn
- S·ª≠ d·ª•ng ng√¥n ng·ªØ d·ªÖ hi·ªÉu, th√¢n thi·ªán

L∆∞u √Ω quan tr·ªçng:
- Ch·ªâ d·ª±a v√†o th√¥ng tin trong context ƒë∆∞·ª£c cung c·∫•p
- N·∫øu kh√¥ng c√≥ th√¥ng tin, h√£y th·ª´a nh·∫≠n v√† khuy√™n g·∫∑p b√°c sƒ©
- Kh√¥ng bao gi·ªù ƒë∆∞a ra l·ªùi khuy√™n y t·∫ø nguy hi·ªÉm`)

    const [userPrompt, setUserPrompt] = useState(`D·ª±a tr√™n th√¥ng tin y t·∫ø sau ƒë√¢y:

{context}

H√£y tr·∫£ l·ªùi c√¢u h·ªèi c·ªßa b·ªánh nh√¢n: {question}

L∆∞u √Ω:
- Tr·∫£ l·ªùi m·ªôt c√°ch chi ti·∫øt v√† d·ªÖ hi·ªÉu
- N√™u r√µ ngu·ªìn th√¥ng tin n·∫øu c√≥
- Khuy·∫øn kh√≠ch g·∫∑p b√°c sƒ© n·∫øu c·∫ßn thi·∫øt`)

    return (
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
            {/* Main Settings */}
            <div className="lg:col-span-2 space-y-6">
                <div className="bg-white rounded-lg border border-gray-200 p-6">
                    <h3 className="text-lg font-medium text-gray-900 mb-4">üí¨ Prompt Templates</h3>

                    <div className="space-y-3 mb-6">
                        {promptTemplates.map((template) => (
                            <div key={template.id} className="flex items-center gap-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50">
                                <input
                                    type="radio"
                                    id={template.id}
                                    name="prompt-template"
                                    checked={selectedTemplate === template.id}
                                    onChange={() => setSelectedTemplate(template.id)}
                                    className="h-4 w-4 text-blue-600"
                                />
                                <div className="flex-1">
                                    <label htmlFor={template.id} className="font-medium text-gray-900 cursor-pointer">
                                        {template.name}
                                    </label>
                                    <p className="text-sm text-gray-500">{template.description}</p>
                                </div>
                                <button className="p-2 text-gray-400 hover:text-gray-600">
                                    ‚úèÔ∏è
                                </button>
                            </div>
                        ))}
                    </div>

                    <div className="flex gap-2">
                        <button className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">
                            ‚ûï T·∫°o Template m·ªõi
                        </button>
                        <button className="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200">
                            üì• Import Template
                        </button>
                    </div>
                </div>

                <div className="bg-white rounded-lg border border-gray-200 p-6">
                    <h3 className="text-lg font-medium text-gray-900 mb-4">ü§ñ System Prompt</h3>
                    <textarea
                        value={systemPrompt}
                        onChange={(e) => setSystemPrompt(e.target.value)}
                        className="w-full h-40 px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 font-mono text-sm"
                        placeholder="Nh·∫≠p system prompt..."
                    />
                    <p className="text-xs text-gray-500 mt-2">
                        System prompt ƒë·ªãnh nghƒ©a vai tr√≤ v√† h√†nh vi c·ªßa AI
                    </p>
                </div>

                <div className="bg-white rounded-lg border border-gray-200 p-6">
                    <h3 className="text-lg font-medium text-gray-900 mb-4">üë§ User Prompt Template</h3>
                    <textarea
                        value={userPrompt}
                        onChange={(e) => setUserPrompt(e.target.value)}
                        className="w-full h-32 px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 font-mono text-sm"
                        placeholder="Nh·∫≠p user prompt template..."
                    />
                    <div className="mt-3 p-3 bg-yellow-50 rounded-md">
                        <p className="text-sm text-yellow-800">
                            <strong>Bi·∫øn c√≥ s·∫µn:</strong> {`{context}`} - Th√¥ng tin t·ª´ RAG, {`{question}`} - C√¢u h·ªèi c·ªßa user
                        </p>
                    </div>
                </div>
            </div>

            {/* Sidebar */}
            <div className="space-y-6">
                <div className="bg-white rounded-lg border border-gray-200 p-6">
                    <h3 className="text-lg font-medium text-gray-900 mb-4">üß™ Test Prompt</h3>
                    <div className="space-y-3">
                        <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">
                                C√¢u h·ªèi test
                            </label>
                            <textarea
                                className="w-full px-3 py-2 border border-gray-300 rounded-md text-sm"
                                rows={3}
                                placeholder="Nh·∫≠p c√¢u h·ªèi ƒë·ªÉ test prompt..."
                            />
                        </div>
                        <button className="w-full bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700">
                            üß™ Test Prompt
                        </button>
                    </div>
                </div>

                <div className="bg-white rounded-lg border border-gray-200 p-6">
                    <h3 className="text-lg font-medium text-gray-900 mb-4">üìä Prompt Stats</h3>
                    <div className="space-y-3">
                        <div className="flex justify-between">
                            <span className="text-sm text-gray-600">System tokens:</span>
                            <span className="font-medium">~245</span>
                        </div>
                        <div className="flex justify-between">
                            <span className="text-sm text-gray-600">Template tokens:</span>
                            <span className="font-medium">~89</span>
                        </div>
                        <div className="flex justify-between">
                            <span className="text-sm text-gray-600">Estimated cost:</span>
                            <span className="font-medium">$0.002/query</span>
                        </div>
                    </div>
                </div>

                <div className="bg-white rounded-lg border border-gray-200 p-6">
                    <h3 className="text-lg font-medium text-gray-900 mb-4">‚ö° Thao t√°c nhanh</h3>
                    <div className="space-y-3">
                        <button className="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700">
                            üíæ L∆∞u Prompt
                        </button>
                        <button className="w-full bg-gray-100 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-200">
                            üîÑ Reset v·ªÅ m·∫∑c ƒë·ªãnh
                        </button>
                        <button className="w-full bg-gray-100 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-200">
                            üìã Copy Prompt
                        </button>
                    </div>
                </div>
            </div>
        </div>
    )
}
